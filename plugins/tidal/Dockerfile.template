FROM debian:bookworm-slim

WORKDIR /usr/src

ENV PULSE_SERVER=tcp:localhost:4317
ENV DBUS_SYSTEM_BUS_ADDRESS=unix:path=/host/run/dbus/system_bus_socket

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    libasound2 \
    libasound2-plugins \
    libpulse0 \
    libavahi-client3 \
    libavahi-common3 \
    libdbus-1-3 \
    libssl3 \
    libportaudio2 \
    libflac++10 \
    alsa-utils \
    dbus \
    avahi-daemon \
    supervisor \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set up ALSA bridge for PulseAudio connectivity
RUN echo "pcm.!default {\n\
    type pulse\n\
    server \"tcp:localhost:4317\"\n\
}\n\
ctl.!default {\n\
    type pulse\n\
    server \"tcp:localhost:4317\"\n\
}" > /etc/asound.conf

# Create directory for Tidal Connect
RUN mkdir -p /usr/ifi

# Download and install Tidal Connect binaries with multiple fallback sources
RUN cd /usr/ifi && \
    # Try primary source first
    (curl -L -o ifi-tidal-release.tar.gz "https://github.com/seniorgod/ifi-tidal-release/archive/refs/heads/main.tar.gz" && \
     tar -xzf ifi-tidal-release.tar.gz && \
     mv ifi-tidal-release-main ifi-tidal-release && \
     rm ifi-tidal-release.tar.gz) || \
    # Fallback: try to clone the repository directly
    (git clone https://github.com/seniorgod/ifi-tidal-release.git && \
     echo "Downloaded via git clone") || \
    # Final fallback: create a placeholder structure and warn
    (mkdir -p ifi-tidal-release/bin ifi-tidal-release/id_certificate ifi-tidal-release/pa_devs/bin && \
     echo "#!/bin/bash" > ifi-tidal-release/bin/tidal_connect_application && \
     echo "echo 'ERROR: Tidal Connect binaries not available. Please check the logs.'" >> ifi-tidal-release/bin/tidal_connect_application && \
     echo "exit 1" >> ifi-tidal-release/bin/tidal_connect_application && \
     echo "WARNING: Using fallback placeholder - Tidal Connect will not work properly") && \
    # Set permissions
    chmod +x ifi-tidal-release/bin/tidal_connect_application || true && \
    chmod +x ifi-tidal-release/bin/speaker_controller_application || true && \
    chmod +x ifi-tidal-release/pa_devs/bin/ifi-pa-devs-get || true && \
    chmod +x ifi-tidal-release/pa_devs/bin/pa_devs || true

# Copy startup script and supervisor config
COPY start.sh /usr/src/
COPY supervisor.conf /usr/src/supervisor.conf

RUN chmod +x /usr/src/start.sh

CMD ["supervisord", "-c", "/usr/src/supervisor.conf"]
