# PulseAudio compatibility layer configuration

context.properties = {
    # Advertise as PulseAudio server
    pulse.server.type = "pulseaudio"
}

context.modules = [
    {
        name = libpipewire-module-protocol-pulse
        args = {
            # Network settings for container compatibility
            server.address = [
                "unix:native"
                "tcp:0.0.0.0:4317"
            ]
            
            # Latency settings
            pulse.min.req = 256/48000
            pulse.default.req = 960/48000
            pulse.max.req = 1024/48000
            pulse.min.quantum = 256/48000
            pulse.max.quantum = 1024/48000
            pulse.min.frag = 256/48000
            pulse.default.frag = 96000/48000
            pulse.max.frag = 96000/48000
            pulse.default.tlength = 96000/48000
            
            # Compatibility settings
            pulse.fix.format = "S16LE"
            pulse.fix.rate = 48000
            pulse.fix.channels = 2
            pulse.fix.position = [ FL FR ]
        }
    }
]

pulse.properties = {
    # Server properties
    server.address = [ "tcp:0.0.0.0:4317" ]
    
    # Compatibility properties
    pulse.min.req = 256/48000
    pulse.default.req = 960/48000
    pulse.max.req = 1024/48000
    pulse.min.quantum = 256/48000
    pulse.max.quantum = 1024/48000
}

pulse.rules = [
    {
        # Default rule for all clients
        matches = [ { } ]
        actions = {
            update-props = {
                pulse.min.quantum = 256/48000
                pulse.max.quantum = 1024/48000
                pulse.default.req = 960/48000
            }
        }
    }
]

stream.properties = {
    node.latency = 1024/48000
    resample.quality = 4
    channelmix.normalize = false
    channelmix.mix-lfe = false
    channelmix.upmix = true
    channelmix.upmix-method = psd
    channelmix.lfe-cutoff = 150
    channelmix.fc-cutoff = 12000
    channelmix.rear-delay = 12.0
    channelmix.stereo-widen = 0.0
    channelmix.hilbert-taps = 0
}
